# Django Configuration
DJANGO_SECRET_KEY=your-secret-key-here
DEBUG=True

# Database Configuration
DB_NAME=haos_db
DB_USER=postgres
DB_PASSWORD=your-db-password
DB_HOST=localhost
DB_PORT=5432

# Redis Configuration
REDIS_URL=redis://127.0.0.1:6379/1

# Celery / Redis (use localhost for local development, redis for Docker)
CELERY_BROKER_URL=redis://127.0.0.1:6379/0
CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0


# Google OAuth Configuration
GOOGLE_OAUTH_CLIENT_ID=your-google-client-id
GOOGLE_OAUTH_CLIENT_SECRET=your-google-client-secret

# CORS & CSRF Configuration
ALLOWED_HOSTS=localhost,127.0.0.1
CSRF_TRUSTED_ORIGINS=http://localhost,http://127.0.0.1,http://localhost:8000,http://localhost:5173
CORS_ALLOWED_ORIGINS=http://localhost:8000,http://localhost:5173
OAUTH_FRONTEND_URL=http://localhost:5173
OAUTH_DOMAINS=localhost

# Session & Security Configuration (Development - set to True for production)
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
SECURE_SSL_REDIRECT=False

# Field Encryption Configuration
# Key for encrypting sensitive fields (CNP, ID documents, etc.)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
FIELD_ENCRYPTION_KEY=your-encryption-key-here

# Dropbox Sign API Configuration
DROPBOX_SIGN_API_KEY=your-dropbox-sign-api-key

# Google Drive API Configuration (Service Account)
GOOGLE_SERVICE_ACCOUNT_FILE=your-service-account-file.json
# OAuth domain restriction (filters Google account picker to this domain)
OAUTH_ALLOWED_DOMAINS=yourdomain.com

# ===================================================
# AWS S3 STORAGE CONFIGURATION
# ===================================================
# Set to True to use S3 for media file storage (recommended for production)
USE_S3=False

# AWS Credentials (required when USE_S3=True)
# Get these from AWS IAM Console
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key

# S3 Bucket Configuration
AWS_STORAGE_BUCKET_NAME=your-bucket-name
AWS_S3_REGION_NAME=us-east-1

# ===================================================
# PRODUCTION DEPLOYMENT NOTES
# ===================================================
# For production deployment:
# 1. Set DEBUG=False
# 2. Set USE_S3=True
# 3. Configure AWS credentials
# 4. Set SESSION_COOKIE_SECURE=True
# 5. Set CSRF_COOKIE_SECURE=True
# 6. Set SECURE_SSL_REDIRECT=True
# 7. Update ALLOWED_HOSTS with your production domain
# 8. Update CORS settings with your production frontend URL
