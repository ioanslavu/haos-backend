# Generated by Django 5.2.7 on 2025-10-30 03:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contracts', '0009_contract_department_and_policy'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(help_text='Event type from Dropbox Sign (signature_request_signed, etc.)', max_length=100)),
                ('signature_request_id', models.CharField(db_index=True, help_text='Dropbox Sign signature request ID', max_length=255)),
                ('signer_email', models.CharField(blank=True, help_text='Email of the signer (if applicable)', max_length=255, null=True)),
                ('event_hash', models.CharField(db_index=True, help_text='SHA256 hash for idempotency (prevents duplicate processing)', max_length=64, unique=True)),
                ('received_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('processed', models.BooleanField(default=False, help_text='Whether this event was successfully processed')),
                ('verified_with_api', models.BooleanField(default=False, help_text='Whether event was verified with Dropbox Sign API')),
                ('api_verification_attempts', models.IntegerField(default=0, help_text='Number of API verification attempts')),
                ('raw_payload', models.JSONField(help_text='Complete webhook payload for forensics')),
                ('client_ip', models.GenericIPAddressField(blank=True, help_text='IP address of webhook sender', null=True)),
                ('verification_result', models.JSONField(blank=True, help_text='Result from Dropbox Sign API verification', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed')),
            ],
            options={
                'verbose_name': 'Webhook Event',
                'verbose_name_plural': 'Webhook Events',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='contract',
            options={'ordering': ['-created_at'], 'permissions': [('view_all_contracts', 'Can view all contracts across departments'), ('publish_contract', 'Can make contract public'), ('send_for_signature', 'Can send contract for signature'), ('regenerate_contract', 'Can regenerate contract')]},
        ),
        migrations.RenameIndex(
            model_name='contracttypepolicy',
            new_name='contracts_c_role_ae64c5_idx',
            old_name='contracts_c_role_dept_idx',
        ),
        migrations.AddField(
            model_name='webhookevent',
            name='contract',
            field=models.ForeignKey(blank=True, help_text='Related contract (null if contract not found)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webhook_events', to='contracts.contract'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['event_hash'], name='contracts_w_event_h_dba934_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['contract', 'event_type', 'received_at'], name='contracts_w_contrac_59be60_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['signature_request_id', 'event_type'], name='contracts_w_signatu_524356_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['processed', 'received_at'], name='contracts_w_process_4b0531_idx'),
        ),
    ]
