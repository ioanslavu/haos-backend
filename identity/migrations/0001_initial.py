# Generated by Django 5.2.7 on 2025-10-23 13:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('PF', 'Physical Person'), ('PJ', 'Legal Entity')], db_index=True, help_text='Entity type: Physical Person or Legal Entity', max_length=2)),
                ('display_name', models.CharField(db_index=True, help_text='Display name for the entity', max_length=255)),
                ('email', models.EmailField(blank=True, help_text='Primary email address', max_length=254, null=True)),
                ('phone', models.CharField(blank=True, help_text='Primary phone number', max_length=50, null=True)),
                ('address', models.TextField(blank=True, help_text='Full address', null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, help_text='State/Province/County', max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, default='Romania', max_length=100, null=True)),
                ('company_registration_number', models.CharField(blank=True, help_text='Company registration number (for PJ)', max_length=50, null=True)),
                ('vat_number', models.CharField(blank=True, help_text='VAT number (for PJ)', max_length=50, null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entities_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Entity',
                'verbose_name_plural': 'Entities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLogSensitive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(choices=[('cnp', 'CNP'), ('ssn', 'SSN'), ('id_card', 'ID Card Details'), ('bank_account', 'Bank Account')], max_length=20)),
                ('action', models.CharField(choices=[('view', 'View'), ('export', 'Export'), ('update', 'Update')], default='view', max_length=20)),
                ('reason', models.TextField(help_text='Reason for accessing sensitive data')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('viewer_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensitive_data_views', to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensitive_audits', to='identity.entity')),
            ],
            options={
                'verbose_name': 'Sensitive Data Audit Log',
                'verbose_name_plural': 'Sensitive Data Audit Logs',
                'ordering': ['-viewed_at'],
            },
        ),
        migrations.CreateModel(
            name='EntityRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('artist', 'Artist'), ('producer', 'Producer'), ('composer', 'Composer'), ('lyricist', 'Lyricist'), ('audio_editor', 'Audio Editor'), ('mixer', 'Mixer'), ('mastering_engineer', 'Mastering Engineer'), ('director', 'Director'), ('publisher', 'Publisher'), ('label', 'Label')], db_index=True, max_length=50)),
                ('primary_role', models.BooleanField(default=False, help_text='Is this the primary role for this entity?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_roles', to='identity.entity')),
            ],
            options={
                'ordering': ['-primary_role', 'role'],
            },
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_type', models.CharField(choices=[('entity', 'Entity'), ('work', 'Work'), ('recording', 'Recording'), ('release', 'Release')], db_index=True, max_length=20)),
                ('owner_id', models.BigIntegerField(db_index=True, help_text='ID of the owner object')),
                ('scheme', models.CharField(choices=[('ISRC', 'International Standard Recording Code'), ('ISWC', 'International Standard Musical Work Code'), ('UPC', 'Universal Product Code'), ('EAN', 'European Article Number'), ('CUI', 'Unique Registration Code (Romania)'), ('VAT', 'VAT Number'), ('IBAN', 'International Bank Account Number'), ('BIC', 'Bank Identifier Code'), ('SSN', 'Social Security Number'), ('EIN', 'Employer Identification Number'), ('IPI', 'Interested Party Information'), ('CAE', 'Composer, Author and Publisher Number'), ('SPOTIFY_URI', 'Spotify URI'), ('APPLE_ID', 'Apple Music ID'), ('YOUTUBE_ID', 'YouTube ID')], db_index=True, max_length=20)),
                ('value', models.CharField(db_index=True, help_text='The identifier value', max_length=100)),
                ('pii_flag', models.BooleanField(default=False, help_text='Contains personally identifiable information')),
                ('issued_by', models.CharField(blank=True, help_text='Organization that issued this identifier', max_length=100, null=True)),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['scheme', 'value'],
                'indexes': [models.Index(fields=['owner_type', 'owner_id', 'scheme'], name='identity_id_owner_t_beba94_idx'), models.Index(fields=['scheme', 'value'], name='identity_id_scheme_1018e9_idx'), models.Index(fields=['value'], name='identity_id_value_a8409d_idx')],
                'unique_together': {('scheme', 'value')},
            },
        ),
        migrations.CreateModel(
            name='SensitiveIdentity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_cnp_encrypted', models.CharField(blank=True, help_text='Encrypted CNP', max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('id_series', models.CharField(blank=True, help_text='ID card series', max_length=10, null=True)),
                ('id_number', models.CharField(blank=True, help_text='ID card number', max_length=20, null=True)),
                ('id_issued_by', models.CharField(blank=True, help_text='ID card issuing authority', max_length=100, null=True)),
                ('id_issued_date', models.DateField(blank=True, null=True)),
                ('id_expiry_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sensitive_identity', to='identity.entity')),
            ],
            options={
                'verbose_name': 'Sensitive Identity',
                'verbose_name_plural': 'Sensitive Identities',
            },
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['display_name'], name='identity_en_display_05360c_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['kind', 'display_name'], name='identity_en_kind_7e2289_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['email'], name='identity_en_email_ab17d7_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlogsensitive',
            index=models.Index(fields=['entity', 'viewed_at'], name='identity_au_entity__eb333a_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlogsensitive',
            index=models.Index(fields=['viewer_user', 'viewed_at'], name='identity_au_viewer__84b788_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlogsensitive',
            index=models.Index(fields=['field', 'action'], name='identity_au_field_696718_idx'),
        ),
        migrations.AddIndex(
            model_name='entityrole',
            index=models.Index(fields=['role'], name='identity_en_role_64dec6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='entityrole',
            unique_together={('entity', 'role')},
        ),
    ]
