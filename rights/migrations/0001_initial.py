# Generated by Django 5.2.7 on 2025-10-23 13:03

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('identity', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(choices=[('work', 'Work'), ('recording', 'Recording')], db_index=True, help_text='Whether this credit is for a Work or Recording', max_length=10)),
                ('object_id', models.BigIntegerField(db_index=True, help_text='ID of the Work or Recording')),
                ('role', models.CharField(choices=[('composer', 'Composer'), ('lyricist', 'Lyricist'), ('arranger', 'Arranger'), ('publisher', 'Publisher'), ('sub_publisher', 'Sub-Publisher'), ('artist', 'Artist'), ('feat', 'Featured Artist'), ('producer', 'Producer'), ('co_producer', 'Co-Producer'), ('exec_producer', 'Executive Producer'), ('audio_editor', 'Audio Editor'), ('mixer', 'Mixer'), ('mastering_engineer', 'Mastering Engineer'), ('director', 'Director'), ('vocalist', 'Vocalist'), ('instrumentalist', 'Instrumentalist'), ('conductor', 'Conductor'), ('orchestra', 'Orchestra')], db_index=True, help_text='Role in the work/recording', max_length=30)),
                ('share_kind', models.CharField(choices=[('none', 'No Share'), ('writer_share', 'Writer Share'), ('publisher_share', 'Publisher Share'), ('master_share', 'Master Share'), ('points', 'Producer Points')], default='none', help_text='Type of share/royalty', max_length=20)),
                ('share_value', models.DecimalField(blank=True, decimal_places=2, help_text='Share percentage (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('credited_as', models.CharField(blank=True, help_text='Name as credited (if different from entity name)', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this credit', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credits', to='identity.entity')),
            ],
            options={
                'ordering': ['role', 'entity__display_name'],
                'indexes': [models.Index(fields=['scope', 'object_id', 'role'], name='rights_cred_scope_3ba2c7_idx'), models.Index(fields=['entity', 'role'], name='rights_cred_entity__325bc3_idx')],
                'unique_together': {('scope', 'object_id', 'entity', 'role')},
            },
        ),
        migrations.CreateModel(
            name='Split',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(choices=[('work', 'Work'), ('recording', 'Recording')], db_index=True, help_text='Whether this split is for a Work or Recording', max_length=10)),
                ('object_id', models.BigIntegerField(db_index=True, help_text='ID of the Work or Recording')),
                ('right_type', models.CharField(choices=[('writer', 'Writer Share'), ('publisher', 'Publisher Share'), ('master', 'Master Share')], db_index=True, help_text='Type of right/royalty', max_length=20)),
                ('share', models.DecimalField(decimal_places=2, help_text='Share percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('source', models.CharField(blank=True, help_text="Source of this split (e.g., 'Contract #123')", max_length=100, null=True)),
                ('is_locked', models.BooleanField(default=False, help_text='Prevent this split from being edited')),
                ('notes', models.TextField(blank=True, help_text='Notes about this split', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='splits', to='identity.entity')),
            ],
            options={
                'ordering': ['-share', 'entity__display_name'],
                'indexes': [models.Index(fields=['scope', 'object_id', 'right_type'], name='rights_spli_scope_4ae3df_idx'), models.Index(fields=['entity', 'right_type'], name='rights_spli_entity__1d5222_idx')],
                'unique_together': {('scope', 'object_id', 'entity', 'right_type')},
            },
        ),
    ]
