# Generated by Django 5.2.7 on 2025-10-23 13:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Release title', max_length=255)),
                ('type', models.CharField(choices=[('single', 'Single'), ('ep', 'EP'), ('album', 'Album'), ('compilation', 'Compilation'), ('live_album', 'Live Album'), ('mixtape', 'Mixtape'), ('soundtrack', 'Soundtrack')], db_index=True, default='album', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('released', 'Released'), ('cancelled', 'Cancelled')], db_index=True, default='draft', max_length=20)),
                ('release_date', models.DateField(blank=True, db_index=True, help_text='Official release date', null=True)),
                ('catalog_number', models.CharField(blank=True, help_text='Label catalog number', max_length=50, null=True)),
                ('label_name', models.CharField(blank=True, help_text='Label name for this release', max_length=100, null=True)),
                ('artwork_url', models.URLField(blank=True, help_text='URL to cover artwork', null=True)),
                ('description', models.TextField(blank=True, help_text='Release description', null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-release_date', '-created_at'],
                'indexes': [models.Index(fields=['release_date'], name='catalog_rel_release_bda201_idx'), models.Index(fields=['type', 'status'], name='catalog_rel_type_16b620_idx'), models.Index(fields=['title'], name='catalog_rel_title_86333c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Title of the musical work', max_length=255)),
                ('alternate_titles', models.JSONField(blank=True, default=list, help_text='List of alternate titles')),
                ('language', models.CharField(blank=True, help_text='Primary language code (ISO 639-1)', max_length=10, null=True)),
                ('genre', models.CharField(blank=True, help_text='Primary genre', max_length=50, null=True)),
                ('sub_genre', models.CharField(blank=True, help_text='Sub-genre', max_length=50, null=True)),
                ('year_composed', models.PositiveIntegerField(blank=True, help_text='Year the work was composed', null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)])),
                ('lyrics', models.TextField(blank=True, help_text='Full lyrics of the work', null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the work', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adaptation_of', models.ForeignKey(blank=True, help_text='Original work if this is an adaptation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adaptations', to='catalog.work')),
                ('translation_of', models.ForeignKey(blank=True, help_text='Original work if this is a translation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='translations', to='catalog.work')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Title of the recording (may differ from work title)', max_length=255)),
                ('type', models.CharField(choices=[('audio_master', 'Audio Master'), ('music_video', 'Music Video'), ('live_audio', 'Live Audio'), ('live_video', 'Live Video'), ('remix', 'Remix'), ('radio_edit', 'Radio Edit'), ('acoustic', 'Acoustic Version'), ('instrumental', 'Instrumental'), ('acapella', 'A Cappella'), ('extended', 'Extended Version'), ('demo', 'Demo')], db_index=True, default='audio_master', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('ready', 'Ready'), ('approved', 'Approved'), ('released', 'Released'), ('archived', 'Archived')], db_index=True, default='draft', max_length=20)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('bpm', models.PositiveIntegerField(blank=True, help_text='Beats per minute', null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(300)])),
                ('key', models.CharField(blank=True, help_text='Musical key (e.g., C major, A minor)', max_length=10, null=True)),
                ('recording_date', models.DateField(blank=True, help_text='Date of recording', null=True)),
                ('studio', models.CharField(blank=True, help_text='Recording studio', max_length=100, null=True)),
                ('version', models.CharField(blank=True, help_text="Version description (e.g., 'Radio Edit', 'Extended Mix')", max_length=100, null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the recording', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('derived_from', models.ForeignKey(blank=True, help_text='Original recording if this is derived', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derivatives', to='catalog.recording')),
                ('work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recordings', to='catalog.work')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('audio_wav', 'WAV File'), ('audio_mp3', 'MP3 File'), ('audio_flac', 'FLAC File'), ('audio_aiff', 'AIFF File'), ('video_mov', 'MOV Video'), ('video_mp4', 'MP4 Video'), ('video_mkv', 'MKV Video'), ('artwork', 'Artwork'), ('stems', 'Stems'), ('lyrics', 'Lyrics'), ('subtitles', 'Subtitles'), ('sheet_music', 'Sheet Music'), ('project_file', 'Project File')], db_index=True, max_length=20)),
                ('file_name', models.CharField(help_text='Original file name', max_length=255)),
                ('file_path', models.CharField(help_text='Path to file (S3, local, etc.)', max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('mime_type', models.CharField(blank=True, help_text='MIME type of the file', max_length=100, null=True)),
                ('checksum', models.CharField(blank=True, help_text='SHA-256 checksum', max_length=64, null=True)),
                ('sample_rate', models.IntegerField(blank=True, help_text='Sample rate in Hz (for audio)', null=True)),
                ('bit_depth', models.IntegerField(blank=True, help_text='Bit depth (for audio)', null=True)),
                ('bitrate', models.IntegerField(blank=True, help_text='Bitrate in kbps', null=True)),
                ('resolution', models.CharField(blank=True, help_text='Video resolution (e.g., 1920x1080)', max_length=20, null=True)),
                ('frame_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Frame rate (for video)', max_digits=5, null=True)),
                ('is_master', models.BooleanField(default=False, help_text='Is this the master file?')),
                ('is_public', models.BooleanField(default=False, help_text='Can this file be publicly accessed?')),
                ('notes', models.TextField(blank=True, help_text='Notes about the asset', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_assets', to=settings.AUTH_USER_MODEL)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='catalog.recording')),
            ],
            options={
                'ordering': ['-is_master', 'kind', 'created_at'],
                'indexes': [models.Index(fields=['recording', 'kind'], name='catalog_ass_recordi_4f5faa_idx'), models.Index(fields=['kind', 'is_master'], name='catalog_ass_kind_f0d81a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_number', models.PositiveIntegerField(help_text='Track number in the release')),
                ('disc_number', models.PositiveIntegerField(default=1, help_text='Disc number (for multi-disc releases)')),
                ('version', models.CharField(blank=True, help_text="Track-specific version info (e.g., 'Album Version')", max_length=100, null=True)),
                ('is_bonus', models.BooleanField(default=False, help_text='Is this a bonus track?')),
                ('is_hidden', models.BooleanField(default=False, help_text='Is this a hidden track?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='catalog.recording')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='catalog.release')),
            ],
            options={
                'ordering': ['disc_number', 'track_number'],
                'indexes': [models.Index(fields=['recording', 'release'], name='catalog_tra_recordi_c73312_idx'), models.Index(fields=['release', 'disc_number', 'track_number'], name='catalog_tra_release_f94e18_idx')],
                'unique_together': {('release', 'disc_number', 'track_number')},
            },
        ),
        migrations.AddIndex(
            model_name='work',
            index=models.Index(fields=['title'], name='catalog_wor_title_a8c81c_idx'),
        ),
        migrations.AddIndex(
            model_name='work',
            index=models.Index(fields=['year_composed'], name='catalog_wor_year_co_70aa2d_idx'),
        ),
        migrations.AddIndex(
            model_name='work',
            index=models.Index(fields=['genre'], name='catalog_wor_genre_e9215f_idx'),
        ),
        migrations.AddIndex(
            model_name='recording',
            index=models.Index(fields=['work', 'type'], name='catalog_rec_work_id_57f26f_idx'),
        ),
        migrations.AddIndex(
            model_name='recording',
            index=models.Index(fields=['type', 'status'], name='catalog_rec_type_10ea59_idx'),
        ),
        migrations.AddIndex(
            model_name='recording',
            index=models.Index(fields=['title'], name='catalog_rec_title_d6bad9_idx'),
        ),
        migrations.AddIndex(
            model_name='recording',
            index=models.Index(fields=['status'], name='catalog_rec_status_2ddb09_idx'),
        ),
    ]
