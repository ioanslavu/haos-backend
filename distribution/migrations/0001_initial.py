# Generated by Django 5.2.7 on 2025-10-23 13:03

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(choices=[('recording', 'Recording'), ('release', 'Release')], db_index=True, max_length=20)),
                ('object_id', models.BigIntegerField(db_index=True, help_text='ID of the Recording or Release')),
                ('platform', models.CharField(choices=[('youtube_video', 'YouTube Video'), ('youtube_music', 'YouTube Music'), ('youtube_shorts', 'YouTube Shorts'), ('youtube_topic', 'YouTube Topic Channel'), ('spotify_track', 'Spotify Track'), ('spotify_album', 'Spotify Album'), ('spotify_podcast', 'Spotify Podcast'), ('apple_music_track', 'Apple Music Track'), ('apple_music_album', 'Apple Music Album'), ('itunes_track', 'iTunes Track'), ('itunes_album', 'iTunes Album'), ('amazon_music_track', 'Amazon Music Track'), ('amazon_music_album', 'Amazon Music Album'), ('tiktok_sound', 'TikTok Sound'), ('instagram_audio', 'Instagram Audio'), ('facebook_audio', 'Facebook Audio'), ('snapchat_sound', 'Snapchat Sound'), ('deezer_track', 'Deezer Track'), ('deezer_album', 'Deezer Album'), ('tidal_track', 'Tidal Track'), ('tidal_album', 'Tidal Album'), ('soundcloud_track', 'SoundCloud Track'), ('bandcamp_track', 'Bandcamp Track'), ('bandcamp_album', 'Bandcamp Album'), ('shazam', 'Shazam'), ('audiomack_track', 'Audiomack Track'), ('beatport_track', 'Beatport Track'), ('traxsource_track', 'Traxsource Track')], db_index=True, max_length=50)),
                ('url', models.URLField(help_text='Full URL to the content on the platform', max_length=500, validators=[django.core.validators.URLValidator()])),
                ('external_id', models.CharField(blank=True, db_index=True, help_text='Platform-specific ID (e.g., Spotify URI, YouTube video ID)', max_length=100, null=True)),
                ('content_id', models.CharField(blank=True, help_text='Content ID for rights management', max_length=100, null=True)),
                ('territory', models.CharField(db_index=True, default='GLOBAL', help_text="ISO country code or 'GLOBAL'", max_length=10)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('submitted', 'Submitted'), ('processing', 'Processing'), ('live', 'Live'), ('private', 'Private'), ('blocked', 'Blocked'), ('taken_down', 'Taken Down'), ('expired', 'Expired')], db_index=True, default='planned', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, help_text='When the content went live', null=True)),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='Scheduled publication date', null=True)),
                ('taken_down_at', models.DateTimeField(blank=True, help_text='When the content was taken down', null=True)),
                ('channel', models.CharField(choices=[('stream', 'Streaming'), ('download', 'Download'), ('sync', 'Sync License'), ('ugc', 'User Generated Content'), ('shorts', 'Shorts/Stories'), ('broadcast', 'Broadcast'), ('physical', 'Physical Sales'), ('other', 'Other')], default='stream', help_text='Distribution channel type', max_length=20)),
                ('is_monetized', models.BooleanField(default=True, help_text='Is monetization enabled?')),
                ('owner_account', models.CharField(blank=True, help_text='Account/channel that owns this publication', max_length=100, null=True)),
                ('distributor', models.CharField(blank=True, help_text='Distributor used (e.g., DistroKid, CD Baby)', max_length=100, null=True)),
                ('metrics', models.JSONField(blank=True, default=dict, help_text='Platform metrics (views, streams, likes, etc.)')),
                ('last_metrics_update', models.DateTimeField(blank=True, help_text='When metrics were last updated', null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
                'indexes': [models.Index(fields=['object_type', 'object_id'], name='distributio_object__5bf6eb_idx'), models.Index(fields=['platform', 'territory', 'status'], name='distributio_platfor_b5dfaa_idx'), models.Index(fields=['platform', 'external_id'], name='distributio_platfor_19170e_idx'), models.Index(fields=['status', 'published_at'], name='distributio_status_d09279_idx')],
            },
        ),
    ]
