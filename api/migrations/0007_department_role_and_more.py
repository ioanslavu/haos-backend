# Generated by Django 5.2.7 on 2025-10-30 15:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0006_alter_userprofile_department'),
    ]

    operations = [
        # Step 1: Create new Department and Role models
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text="Unique department code (e.g., 'digital', 'sales', 'publishing')", unique=True)),
                ('name', models.CharField(help_text='Display name for the department', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description of the department')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this department is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text="Unique role code (e.g., 'digital_manager', 'administrator')", unique=True)),
                ('name', models.CharField(help_text='Display name for the role', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description of the role')),
                ('level', models.IntegerField(db_index=True, help_text='Role hierarchy level: 100=guest, 200=employee, 300=manager, 1000=admin')),
                ('is_system_role', models.BooleanField(default=False, help_text='System roles cannot be deleted via UI')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this role is active and assignable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['level', 'code'],
            },
        ),
        # Step 2: Add FK relationship to Role model (this is safe because Role is new)
        migrations.AddField(
            model_name='role',
            name='department',
            field=models.ForeignKey(blank=True, help_text='If set, this role can only be assigned to users in this specific department', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='roles', to='api.department'),
        ),
        # Step 3: Rename old CharField fields to preserve data
        migrations.RenameField(
            model_name='userprofile',
            old_name='department',
            new_name='department_old',
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='role',
            new_name='role_old',
        ),
        # Step 4: Add NEW nullable ForeignKey fields
        migrations.AddField(
            model_name='userprofile',
            name='department',
            field=models.ForeignKey(
                blank=True,
                null=True,
                help_text="User's department (employees/managers require department)",
                on_delete=django.db.models.deletion.PROTECT,
                related_name='users',
                to='api.department'
            ),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role',
            field=models.ForeignKey(
                blank=True,
                null=True,
                help_text="User's role in the system",
                on_delete=django.db.models.deletion.PROTECT,
                related_name='users',
                to='api.role'
            ),
        ),
    ]
